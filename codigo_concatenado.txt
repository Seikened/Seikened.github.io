--- Inicio del archivo: /Users/fernandoleonfranco/Documents/GitHub/seiken/src/index.tsx ---
import React from 'react';
import ReactDOM from 'react-dom/client';
import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';
import './index.css'; // Importa el CSS compilado
import App from './App';
import reportWebVitals from './reportWebVitals';
import Blog from './pages/Blog';
import Portfolio from './pages/Portfolio';
import About from './pages/About';

const root = ReactDOM.createRoot(
  document.getElementById('root') as HTMLElement
);

root.render(
  <React.StrictMode>
    <Router>
      <Routes>
        <Route path="/" element={<App />} />
        <Route path="/blog" element={<Blog />} />
        <Route path="/portfolio" element={<Portfolio />} />
        <Route path="/about" element={<About />} />
      </Routes>
    </Router>
  </React.StrictMode>
);

reportWebVitals();

--- Fin del archivo: /Users/fernandoleonfranco/Documents/GitHub/seiken/src/index.tsx ---

--- Inicio del archivo: /Users/fernandoleonfranco/Documents/GitHub/seiken/src/App.tsx ---
import React, { useState, useEffect } from 'react';
import LandingPage from './pages/LandingPage';
import './Switch.css'; // Importa el archivo CSS personalizado si es necesario

const Switch: React.FC<{ isOn: boolean, handleToggle: () => void }> = ({ isOn, handleToggle }) => {
  return (
    <div
      className={`switch ${isOn ? 'switch-on' : 'switch-off'} absolute top-2 left-2`} // Posici√≥n absoluta para el switch
      onClick={handleToggle}
    >
      <div className="switch-handle" />
    </div>
  );
};

const App: React.FC = () => {
  const [isDay, setIsDay] = useState(true);

  useEffect(() => {
    const hour = new Date().getHours();
    setIsDay(hour >= 6 && hour < 18);
  }, []);

  const toggleDayNight = () => {
    setIsDay((prev) => !prev);
  };

  return (
    <div className={`min-h-screen flex flex-col justify-center items-center ${isDay ? 'bg-primary'  : 'bg-secondary '}`}>
      <Switch isOn={isDay} handleToggle={toggleDayNight} />
      <h1 className="text-2xl font-semibold mb-4 ">
        {isDay ? 'Buenos D√≠as ‚òÄÔ∏è' : 'Buenas noches üåô'}
      </h1>
      <LandingPage
        nodeColor={isDay ? 'fill-secondary' : 'fill-primary'}
        linkColor={isDay ? 'stroke-secondary' : 'stroke-primary'}
        hoverColor="stroke-tertiary"
        textColor = {isDay ? 'fill-secondary text-lg font-bold' : 'fill-primary text-lg font-bold'}
        textOpacity={0.15}
        isDay={isDay}
      />
    </div>
  );
};

export default App;

--- Fin del archivo: /Users/fernandoleonfranco/Documents/GitHub/seiken/src/App.tsx ---

--- Inicio del archivo: /Users/fernandoleonfranco/Documents/GitHub/seiken/src/App.test.tsx ---
import React from 'react';
import { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});

--- Fin del archivo: /Users/fernandoleonfranco/Documents/GitHub/seiken/src/App.test.tsx ---

--- Inicio del archivo: /Users/fernandoleonfranco/Documents/GitHub/seiken/src/App.css ---
.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

--- Fin del archivo: /Users/fernandoleonfranco/Documents/GitHub/seiken/src/App.css ---

--- Inicio del archivo: /Users/fernandoleonfranco/Documents/GitHub/seiken/src/index.css ---
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

--- Fin del archivo: /Users/fernandoleonfranco/Documents/GitHub/seiken/src/index.css ---

--- Inicio del archivo: /Users/fernandoleonfranco/Documents/GitHub/seiken/src/pages/LandingPage.tsx ---
import React from 'react';
import PhysicsGraph from '../components/PhysicsGraph';

interface LandingPageProps {
  nodeColor: string;
  linkColor: string;
  hoverColor: string;
  textColor: string;
  textOpacity: number;
  isDay: boolean;
}

// Componente de la p√°gina de inicio
const LandingPage: React.FC<LandingPageProps> = ({ nodeColor, linkColor, hoverColor,textColor, textOpacity, isDay }) => {
  const nodes = [
    { id: 'center', label: 'Fernando Leon Franco', radius: 30 },
    { id: 'Blog', label: 'Blog', url: '/blog', radius: 20 },
    { id: 'Portfolio', label: 'Portfolio', url: '/portfolio', radius: 20 },
    { id: 'About', label: 'About me', url: '/about', radius: 20 },
  ];

  const links = [
    { source: 'center', target: 'Blog' },
    { source: 'center', target: 'Portfolio' },
    { source: 'center', target: 'About' },
  ];

  return (
    <div className={`w-full h-full`}>
      <div className="w-full h-full">
        <PhysicsGraph
          nodes={nodes}
          links={links}
          centralNodeId="center"
          nodeColor={nodeColor}
          linkColor={linkColor}
          hoverColor={hoverColor}
          textColor={textColor}
          textOpacity={textOpacity}
          isDay={isDay}
        />
      </div>
    </div>
  );
};

export default LandingPage;

--- Fin del archivo: /Users/fernandoleonfranco/Documents/GitHub/seiken/src/pages/LandingPage.tsx ---

